<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "--//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.scoula.settlement.mapper.SettlementMapper">
    <!-- ResultMap: 컬럼명 <-> SettlementVO 필드명 매핑 -->
    <resultMap id="settlementMap" type="org.scoula.settlement.domain.SettlementVO">
        <id column="settlement_id" property="settlementId"/>
        <result column="trip_id" property="tripId"/>
        <result column="sender_id" property="senderId"/>
        <result column="receiver_id" property="receiverId"/>
        <result column="settlement_status" property="settlementStatus"/>
        <result column="amount" property="amount"/>
    </resultMap>

    <!-- ResultMap: 닉네임 포함 SettlementVO 매핑 -->
    <resultMap id="settlementWithNicknamesMap" type="org.scoula.settlement.domain.SettlementVO">
        <id column="settlement_id" property="settlementId"/>
        <result column="trip_id" property="tripId"/>
        <result column="sender_id" property="senderId"/>
        <result column="receiver_id" property="receiverId"/>
        <result column="settlement_status" property="settlementStatus"/>
        <result column="amount" property="amount"/>
        <result column="sender_nickname" property="senderNickname"/>
        <result column="receiver_nickname" property="receiverNickname"/>
    </resultMap>

    <!-- 특정 유저가 관련된 정산 내역 조회 -->
    <select id="getSettlementsByUserId" resultMap="settlementMap">
        SELECT * FROM settlement
        WHERE sender_id = #{userId} OR receiver_id = #{userId}
        ORDER BY settlement_id DESC
    </select>

    <!-- 특정 유저가 관련된 정산 내역 조회 (닉네임 포함) -->
    <select id="getSettlementsWithNicknamesByUserId" resultMap="settlementWithNicknamesMap">
        SELECT
            s.settlement_id,
            s.trip_id,
            s.sender_id,
            s.receiver_id,
            s.settlement_status,
            s.amount,
            sender.nickname as sender_nickname,
            receiver.nickname as receiver_nickname
        FROM settlement s
                 JOIN users sender ON s.sender_id = sender.user_id
                 JOIN users receiver ON s.receiver_id = receiver.user_id
        WHERE s.sender_id = #{userId} OR s.receiver_id = #{userId}
        ORDER BY s.settlement_id DESC
    </select>

    <!-- 특정 여행 내의 정산 내역 조회 (기존) -->
    <select id="getSettlementsByTripId" resultMap="settlementMap">
        SELECT * FROM settlement
        WHERE trip_id = #{tripId}
        ORDER BY settlement_id DESC
    </select>

    <!-- 특정 여행 내의 정산 내역 조회 (닉네임 포함) -->
    <select id="getSettlementsWithNicknamesByTripId" resultMap="settlementWithNicknamesMap">
        SELECT
            s.settlement_id,
            s.trip_id,
            s.sender_id,
            s.receiver_id,
            s.settlement_status,
            s.amount,
            sender.nickname as sender_nickname,
            receiver.nickname as receiver_nickname
        FROM settlement s
                 JOIN users sender ON s.sender_id = sender.user_id
                 JOIN users receiver ON s.receiver_id = receiver.user_id
        WHERE s.trip_id = #{tripId}
        ORDER BY s.settlement_id DESC
    </select>

    <!-- 단건 정산 조회 (기존) -->
    <select id="getById" resultMap="settlementMap">
        SELECT * FROM settlement
        WHERE settlement_id = #{settlementId}
    </select>

    <!-- 단건 정산 조회 (닉네임 포함) -->
    <select id="getByIdWithNicknames" resultMap="settlementWithNicknamesMap">
        SELECT
            s.settlement_id,
            s.trip_id,
            s.sender_id,
            s.receiver_id,
            s.settlement_status,
            s.amount,
            sender.nickname as sender_nickname,
            receiver.nickname as receiver_nickname
        FROM settlement s
                 JOIN users sender ON s.sender_id = sender.user_id
                 JOIN users receiver ON s.receiver_id = receiver.user_id
        WHERE s.settlement_id = #{settlementId}
    </select>

    <!-- 상태별 정산 조회 (pending, processing, completed) -->
    <select id="getSettlementsByStatus" resultMap="settlementMap">
        SELECT * FROM settlement
        WHERE settlement_status = #{status}
        ORDER BY settlement_id DESC
    </select>

    <!-- 완료 여부 확인용 -->
    <select id="getPendingOrProcessingByTripId" resultMap="settlementMap">
        SELECT * FROM settlement
        WHERE trip_id = #{tripId}
        AND settlement_status IN ('PENDING', 'PROCESSING')
    </select>

    <!-- 정산 상태 업데이트 -->
    <update id="updateSettlementStatus">
        UPDATE settlement
        SET settlement_status = #{newStatus}
        WHERE settlement_id = #{settlementId}
    </update>

    <!-- n빵 분배 db에 insert -->
    <insert id="insertSettlement">
        INSERT INTO settlement (trip_id, sender_id, receiver_id, settlement_status, amount)
        VALUES (#{vo.tripId}, #{vo.senderId}, #{vo.receiverId}, #{vo.settlementStatus}, #{vo.amount})
    </insert>

    <!-- 1. 특정 여행의 총 사용 금액을 계산하는 쿼리 -->
    <!-- payment 테이블에서 trip_id가 일치하는 모든 amount를 합산합니다. -->
    <select id="getTotalAmountByTripId" resultType="int">
        SELECT SUM(amount)
        FROM payment
        WHERE trip_id = #{tripId}
    </select>

    <!-- 2. 특정 여행의 멤버별 총 결제 금액을 계산하는 쿼리 -->
    <!-- trip_member와 users 테이블을 조인하여 해당 여행의 모든 멤버를 가져온 후,
         payment 테이블과 LEFT JOIN하여 각 멤버가 결제한 금액의 총합을 구합니다.
         LEFT JOIN을 사용하여, 결제 내역이 없는 멤버(0원)도 결과에 포함되도록 합니다. -->
    <select id="getMemberPaymentsByTripId" resultType="org.scoula.settlement.dto.SettlementDTO$MemberPaymentInfo">
        SELECT
            u.nickname,
            COALESCE(p.total_paid, 0) AS amount
        FROM
            trip_member tm
                JOIN
            users u ON tm.user_id = u.user_id
                LEFT JOIN
            (SELECT user_id, SUM(amount) AS total_paid
             FROM payment
             WHERE trip_id = #{tripId}
             GROUP BY user_id) p
            ON
                tm.user_id = p.user_id
        WHERE
            tm.trip_id = #{tripId}
    </select>


    <!-- 3. [NEW] 특정 여행의 멤버별 총 부담 금액을 계산하는 쿼리 -->
    <!-- payment_participant 테이블을 활용하여 각 멤버가 실제로 부담해야 할 금액의 총합을 구합니다. -->
    <select id="getMemberDuesByTripId" resultType="org.scoula.settlement.dto.SettlementDTO$MemberPaymentInfo">
        SELECT
            u.nickname,
            COALESCE(pp.total_due, 0) AS amount
        FROM
            trip_member tm
                JOIN
            users u ON tm.user_id = u.user_id
                LEFT JOIN
            (SELECT pp.user_id, SUM(pp.split_amount) AS total_due
             FROM payment_participant pp
                      JOIN payment p ON pp.payment_id = p.payment_id
             WHERE p.trip_id = #{tripId}
             GROUP BY pp.user_id) pp
            ON
                tm.user_id = pp.user_id
        WHERE
            tm.trip_id = #{tripId}
    </select>

    <!-- 4. 정산 계산에 필요한 모든 원본 데이터를 조회하는 쿼리 -->
    <!-- payment, payment_participant, users 테이블을 조인하여
         결제자 닉네임, 참여자 닉네임, 분담액을 가져옵니다. -->
    <select id="getRawSettlementDataByTripId" resultType="org.scoula.settlement.dto.SettlementDTO$RawSettlementDataDTO">
        SELECT
            p.payment_id,
            p.user_id AS payer_id,           -- ✅ userId 조회
            pp.user_id AS participant_id,    -- ✅ userId 조회
            pp.split_amount
        FROM
            payment p
                JOIN
            payment_participant pp ON p.payment_id = pp.payment_id
        WHERE
            p.trip_id = #{tripId}
    </select>

    <!-- [NEW] 저장된 정산 내역을 조회하는 쿼리 -->
    <!-- 닉네임을 가져오기 위해 users 테이블과 두 번 JOIN -->
    <select id="getNicknameSettlementsByTripId" resultType="org.scoula.settlement.dto.SettlementDTO$OptimizedNicknameTransaction">
        SELECT
            s.settlement_id AS settlementId,
            s.amount,
            sender.nickname AS senderNickname,
            receiver.nickname AS receiverNickname
        FROM
            settlement s
                JOIN
            users sender ON s.sender_id = sender.user_id
                JOIN
            users receiver ON s.receiver_id = receiver.user_id
        WHERE
            s.trip_id = #{tripId}
    </select>

    <select id="getMySettlementsByTripId" resultMap="settlementWithNicknamesMap">
        SELECT s.settlement_id, s.trip_id, s.sender_id, s.receiver_id,
               s.settlement_status, s.amount,
               sender.nickname AS sender_nickname,
               receiver.nickname AS receiver_nickname
        FROM settlement s
                 JOIN users sender ON s.sender_id = sender.user_id
                 JOIN users receiver ON s.receiver_id = receiver.user_id
        WHERE s.trip_id = #{tripId}
          AND (s.sender_id = #{userId} OR s.receiver_id = #{userId})
        ORDER BY s.settlement_id
    </select>

    <!-- 특정 사용자가 특정 여행에서 보내야 할 정산들만 조회 -->
    <select id="getMyOutgoingSettlementsByTripId" resultMap="settlementWithNicknamesMap">
        SELECT
            s.settlement_id,
            s.trip_id,
            s.sender_id,
            s.receiver_id,
            s.settlement_status,
            s.amount,
            sender.nickname as sender_nickname,
            receiver.nickname as receiver_nickname
        FROM settlement s
                 JOIN users sender ON s.sender_id = sender.user_id
                 JOIN users receiver ON s.receiver_id = receiver.user_id
        WHERE s.trip_id = #{tripId}
          AND s.sender_id = #{userId}
        ORDER BY s.settlement_id
    </select>

    <!-- 특정 사용자가 특정 여행에서 받아야 할 정산들만 조회 -->
    <select id="getMyIncomingSettlementsByTripId" resultMap="settlementWithNicknamesMap">
        SELECT
            s.settlement_id,
            s.trip_id,
            s.sender_id,
            s.receiver_id,
            s.settlement_status,
            s.amount,
            sender.nickname as sender_nickname,
            receiver.nickname as receiver_nickname
        FROM settlement s
                 JOIN users sender ON s.sender_id = sender.user_id
                 JOIN users receiver ON s.receiver_id = receiver.user_id
        WHERE s.trip_id = #{tripId}
          AND s.receiver_id = #{userId}
        ORDER BY s.settlement_id
    </select>

    <!-- 사용자별 정산 상태 통계 쿼리 -->
    <select id="getMySettlementStatusCounts" resultType="org.scoula.settlement.dto.SettlementDTO$MySettlementStatusResponseDto">
        SELECT
            SUM(CASE WHEN sender_id = #{userId} AND settlement_status = 'PENDING' THEN 1 ELSE 0 END) as pendingToSendCount,
            SUM(CASE WHEN sender_id = #{userId} AND settlement_status = 'PROCESSING' THEN 1 ELSE 0 END) as processingToSendCount,
            SUM(CASE WHEN receiver_id = #{userId} AND settlement_status = 'PENDING' THEN 1 ELSE 0 END) as pendingToReceiveCount,
            SUM(CASE WHEN receiver_id = #{userId} AND settlement_status = 'PROCESSING' THEN 1 ELSE 0 END) as processingToReceiveCount,
            SUM(CASE WHEN (sender_id = #{userId} OR receiver_id = #{userId}) AND settlement_status = 'COMPLETED' THEN 1 ELSE 0 END) as completedCount
        FROM settlement
        WHERE sender_id = #{userId} OR receiver_id = #{userId}
    </select>

    <!-- 여행별 정산 상태 통계 집계 쿼리 -->
    <select id="getRemainingSettlementCounts" resultType="org.scoula.settlement.dto.SettlementDTO$RemainingSettlementResponseDto">
        SELECT
            COUNT(*) as totalCount,
            SUM(CASE WHEN settlement_status = 'PENDING' THEN 1 ELSE 0 END) as pendingCount,
            SUM(CASE WHEN settlement_status = 'PROCESSING' THEN 1 ELSE 0 END) as processingCount,
            SUM(CASE WHEN settlement_status = 'COMPLETED' THEN 1 ELSE 0 END) as completedCount,
            CASE WHEN SUM(CASE WHEN settlement_status IN ('PENDING', 'PROCESSING') THEN 1 ELSE 0 END) > 0
                     THEN true
                 ELSE false
                END as hasRemaining
        FROM settlement
        WHERE trip_id = #{tripId}
    </select>

    <!-- 특정 사용자의 미정산 여행 목록을 조회하는 쿼리 -->
    <!--
        settlement 테이블과 trip 테이블을 JOIN하여,
        로그인한 사용자가 sender 또는 receiver이고,
        정산 상태가 PENDING 또는 PROCESSING인 여행의 정보를
        중복 없이 가져옵니다.
    -->
    <select id="findUnsettledTripsByUserId" resultType="org.scoula.settlement.dto.SettlementDTO$UnsettledTripInfo">
        SELECT DISTINCT
            t.trip_id,
            t.trip_name,
            t.start_date,
            t.end_date
        FROM
            settlement s
                JOIN
            trip t ON s.trip_id = t.trip_id
        WHERE
            (s.sender_id = #{userId} OR s.receiver_id = #{userId})
          AND
            s.settlement_status IN ('PENDING', 'PROCESSING')
    </select>
</mapper>