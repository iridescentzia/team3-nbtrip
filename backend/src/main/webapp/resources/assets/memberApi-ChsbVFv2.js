import{a as s}from"./index-JPUeL1pJ.js";const c=async r=>{try{return(await s.post("/auth/register",{email:r.email,password:r.password,passwordConfirm:r.passwordConfirm,nickname:r.nickname,name:r.name,phoneNumber:r.phoneNumber,fcmToken:r.fcmToken||""})).data}catch(e){throw o(e,"회원가입")}},p=async r=>{try{return(await s.post("/auth/login",{email:r.email,password:r.password,fcmToken:r.fcmToken||""})).data}catch(e){throw o(e,"로그인")}},u=async()=>{try{return(await s.post("/auth/logout")).data}catch(r){throw o(r,"로그아웃")}},w=async r=>{try{return(await s.post("/users/check-nickname",{nickname:r})).data}catch(e){throw o(e,"닉네임 중복 확인")}},i=async r=>{try{return(await s.get(`/users/${r}`)).data}catch(e){throw o(e,"사용자 정보 조회")}},h=async()=>{try{return(await s.get("/mypage")).data}catch(r){throw o(r,"내 정보 조회")}},d=async r=>{try{return(await s.put("/mypage",{nickname:r.nickname,name:r.name,phoneNumber:r.phoneNumber,email:r.email,password:r.password,passwordConfirm:r.passwordConfirm})).data}catch(e){throw o(e,"회원정보 수정")}},o=(r,e)=>{if(console.error(`${e} 중 오류:`,r),r.response){const{status:t,data:n}=r.response;switch(t){case 400:return new Error(n.message||"잘못된 요청입니다.");case 401:return new Error("인증이 필요하거나 토큰이 만료되었습니다.");case 403:return new Error("접근 권한이 없습니다.");case 404:return new Error("요청한 정보를 찾을 수 없습니다.");case 409:return new Error(n.message||"중복된 정보가 있습니다.");case 500:return new Error("서버 내부 오류가 발생했습니다.");default:return new Error(n.message||`${e} 중 오류가 발생했습니다.`)}}else return r.request?new Error("네트워크 연결을 확인해주세요."):new Error(`${e} 중 예상치 못한 오류가 발생했습니다.`)},l=()=>{localStorage.removeItem("accessToken"),localStorage.removeItem("refreshToken")},m=r=>{localStorage.setItem("accessToken",r)};export{p as a,w as b,l as c,i as d,h as g,u as l,c as r,m as s,d as u};
