import{a as s}from"./index-BpiCn1et.js";const c=async e=>{try{return(await s.post("/auth/register",{email:e.email,password:e.password,passwordConfirm:e.passwordConfirm,nickname:e.nickname,name:e.name,phoneNumber:e.phoneNumber,fcmToken:e.fcmToken||""})).data}catch(r){throw o(r,"회원가입")}},p=async e=>{try{return(await s.post("/auth/login",{email:e.email,password:e.password,fcmToken:e.fcmToken||""})).data}catch(r){throw o(r,"로그인")}},u=async()=>{try{return(await s.post("/auth/logout")).data}catch(e){throw o(e,"로그아웃")}},w=async e=>{try{return(await s.post("/users/check-nickname",{nickname:e})).data}catch(r){throw o(r,"닉네임 중복 확인")}},i=async()=>{try{return(await s.get("/mypage")).data}catch(e){throw o(e,"내 정보 조회")}},h=async e=>{try{return(await s.put("/mypage",{nickname:e.nickname,name:e.name,phoneNumber:e.phoneNumber,email:e.email,password:e.password,passwordConfirm:e.passwordConfirm})).data}catch(r){throw o(r,"회원정보 수정")}},o=(e,r)=>{if(console.error(`${r} 중 오류:`,e),e.response){const{status:t,data:n}=e.response;switch(t){case 400:return new Error(n.message||"잘못된 요청입니다.");case 401:return new Error("인증이 필요하거나 토큰이 만료되었습니다.");case 403:return new Error("접근 권한이 없습니다.");case 404:return new Error("요청한 정보를 찾을 수 없습니다.");case 409:return new Error(n.message||"중복된 정보가 있습니다.");case 500:return new Error("서버 내부 오류가 발생했습니다.");default:return new Error(n.message||`${r} 중 오류가 발생했습니다.`)}}else return e.request?new Error("네트워크 연결을 확인해주세요."):new Error(`${r} 중 예상치 못한 오류가 발생했습니다.`)},l=()=>{localStorage.removeItem("accessToken"),localStorage.removeItem("refreshToken")},d=e=>{localStorage.setItem("accessToken",e)};export{p as a,w as b,l as c,i as g,u as l,c as r,d as s,h as u};
