import{l as A,r as o,m as f}from"./index-C9ApI8vq.js";import{a as d}from"./index-PeG32rCn.js";const g=a=>d.get(`/settlements/${a}/summary`),N=a=>d.post("/settlements",a),k=a=>d.get(`/settlements/my/${a}`),R=a=>d.get(`/settlements/${a}`),L=a=>d.post("/settlements/transfer",a),H=A("settlement",()=>{const a=o(null),n=o(null),l=o(null),u=o(null),y=o(!1),s=o(!1),r=o(null),h=f(()=>n.value?.toReceive?n.value.toReceive.reduce((t,e)=>t+e.amount,0):0),S=f(()=>n.value?.toSend?n.value.toSend.reduce((t,e)=>t+e.amount,0):0),T=f(()=>h.value-S.value),D=f(()=>l.value?.settlements?l.value.settlements.filter(t=>t.receiverNickname===u.value):[]),M=f(()=>l.value?.settlements?l.value.settlements.filter(t=>t.senderNickname===u.value):[]);return{summaryData:a,mySettlementData:n,groupSettlementData:l,selectedMember:u,showTransferModal:y,isLoading:s,error:r,totalReceiveAmount:h,totalSendAmount:S,netBalance:T,toReceiveList:D,toSendList:M,fetchSummary:async t=>{s.value=!0,r.value=null;try{const e=new Promise(p=>setTimeout(p,800)),[c]=await Promise.all([g(t),e]);return a.value=c.data,c.data}catch(e){throw console.error("정산 요약 정보 로딩 실패:",e),e.response?.status===403?r.value="그룹장만 정산을 요청할 수 있습니다.":e.response?.status===404?r.value="여행 정보를 찾을 수 없습니다.":r.value="데이터를 불러오는 데 실패했습니다.",e}finally{s.value=!1}},createSettlement:async t=>{try{return(await N({tripId:t})).data}catch(e){throw console.error("정산 생성 실패:",e),e}},fetchGroupSettlement:async t=>{s.value=!0,r.value=null;try{const e=new Promise(i=>setTimeout(i,700)),[c,p]=await Promise.all([R(t),g(t),e]),m=c.data||[],w=p.data;if(!Array.isArray(m)){console.error("settlements is not an array:",m),r.value="정산 데이터 형식이 올바르지 않습니다.";return}if(m.length===0){r.value="아직 정산이 생성되지 않았습니다. 정산을 먼저 생성해주세요.";return}const v=new Set;return m.forEach(i=>{i.senderNickname&&v.add(i.senderNickname),i.receiverNickname&&v.add(i.receiverNickname)}),l.value={settlements:m,members:Array.from(v),tripName:w.tripName,totalAmount:w.totalAmount,transactions:m},Array.from(v).length>0&&(u.value=Array.from(v)[0]),l.value}catch(e){throw console.error("정산 정보 로딩 실패:",e),e.response?.status===403?r.value="그룹장만 정산을 조회할 수 있습니다.":r.value="데이터를 불러오는 데 실패했습니다.",e}finally{s.value=!1}},fetchMySettlement:async t=>{s.value=!0,r.value=null;try{const e=await k(t);return n.value=e.data,e.data}catch(e){throw console.error("개인 정산 정보 로딩 실패:",e),r.value="데이터를 불러오는 데 실패했습니다.",e}finally{s.value=!1}},executeTransfer:async()=>{if(!n.value?.toSend)throw new Error("보낼 정산 데이터가 없습니다.");try{const t=n.value.toSend.map(c=>c.settlementId);return(await L({settlementIds:t})).data}catch(t){throw console.error("송금 실패:",t),t}},openTransferModal:()=>{if(S.value===0)throw new Error("보낼 돈이 없습니다.");y.value=!0},closeTransferModal:()=>{y.value=!1},clearAllData:()=>{a.value=null,n.value=null,l.value=null,u.value=null,y.value=!1,r.value=null},clearSummaryData:()=>{a.value=null},clearMySettlementData:()=>{n.value=null},clearGroupSettlementData:()=>{l.value=null,u.value=null}}});export{g,N as r,H as u};
